aula 1
=========================================================
criar novo projeto react com typescript
yarn create react-app web --template typescript

aula 2
=========================================================
backend
cria a pasta do back
yarn init -y
yarn add express
criar pasta src
criar arquivo server.ts
yarn add typescript -D
yarn tsc --init (cria tsconfig.json file)
entra nesse arquivo e troca es5 para es2017 (ecma script)
yarn add ts-node-dev -D (para executar o projeto usando typescript e node)
incluir no package.json:
  "scripts": {
    "dev": "ts-node-dev --transpile-only --ignore-watch node_modules src/server.ts"
  },
yarn dev

--transpile-only: converte o codigo, mas ignora erros no codigo pq a ide já trata isso
--ignore-watch node_modules: o ts-node-dev nao fica observando alteracoes que acontecem no node_modules

instalando o banco de dados e dependencia para usar com o node
yarn add typeorm sqlite3
por padrao o typeorm executa com typescript. para mudar para o node (package.json)
  "scripts": {
    "typeorm": "ts-node-dev ./node_modules/typeorm/cli.js"
  },
criando migrations
yarn typeorm migration:create -n create_orphanages
executar a migration
yarn typeorm migration:run

para reverter as alterações da migration
yarn typeorm migration:revert

Colocar como false no tsconfig.json para nao obrigar a inicializar valores nas classes
Não obriga a ter construtor na classe
"strictPropertyInitialization": false

pacote para lidar com imagens
yarn add multer

pacote para tratamento de erro na api
yarn add express-async-errors

pacote para validacao de dados
yarn add yup

tem que fazer * as pq o yup nao tem o export
import * as Yup from 'yup';

yarn add cors